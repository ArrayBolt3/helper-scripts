#!/bin/bash

## Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Exit codes of this script get interpreted by sdwdate.
## exit 0
## exit 1: wait, retry and error icon
## exit 2: wait, retry and busy icon

set -o pipefail
set -e errtrace

error_handler() {
   local exit_code="$?"
   echo "\
BASH_COMMAND: $BASH_COMMAND
exit_code: $exit_code"
}

trap "error_handler" ERR

exit_handler() {
   echo "$0: end"
   echo ""
}

trap "exit_handler" EXIT

source /usr/lib/helper-scripts/tor_enabled_check
source /usr/lib/helper-scripts/pkg_manager_running_check

## provides check_tor_bootstrap_status
source /usr/lib/helper-scripts/tor_bootstrap_check.bsh

detect_vm_type() {
   if [ -f "/usr/share/anon-gw-base-files/gateway" ]; then
      VM="Gateway"
   elif [ -f "/usr/share/anon-ws-base-files/workstation" ]; then
      VM="Workstation"
   else
      VM="Other"
   fi
}

timesanitycheck_static() {
   if [ ! -e /usr/share/timesanitycheck/shared ]; then
      return 0
   fi

   ## provides: time_sanity_check
   ## sets: time_sanity_check_exit_code
   ## sets: time_sanity_check_msg_static
   source /usr/share/timesanitycheck/shared
   time_sanity_check
   if [ "$time_sanity_check_exit_code" = "0" ]; then
      echo "Static Time Sanity Check: $time_sanity_check_msg_static"
   else
      echo "Static Time Sanity Check: $time_sanity_check_msg_static"
      timesanitycheck_static_timestamp_based_failed="true"
   fi
}

exit_if_tor_not_yet_enabled() {
   ## Sets: TOR_ENABLED
   check_tor_enabled_do

   if [ "$TOR_ENABLED" = "1" ]; then
      true "$FUNCNAME: INFO: Ok, Tor already enabled."
   else
      if [ -f /usr/share/whonix/marker ]; then
         echo "<b>Tor is disabled.</b> Please enable Tor using whonixsetup.<br> \
Start Menu -> System -> Anon Connection Wizard or in Terminal: sudo whonixsetup"
      else
         echo "Tor is disabled. Please enable Tor in the Tor config."
      fi

      exit 1
   fi
}

check_tor_circuit_established_yet() {
   ## sets: check_bootstrap_helper_script
   ## sets: lastpid
   ## sets: tor_bootstrap_percent
   ## sets: tor_bootstrap_status
   check_tor_circuit_established ## tor_bootstrap_check.bsh

   ## $tor_circuit_established_check_exit_code on timeout returns:
   ## - 124 if sigterm was sufficient
   ## - 137 if needed to use kill.

   for invalid_exit_code in "124" "137" "254" ; do
      if [ "$tor_circuit_established_check_exit_code" = "$invalid_exit_code" ]; then
         echo "Tor Bootstrap Result: \
   <b>ERROR ($tor_circuit_established_check_exit_code).</b><br> Please report this bug!"
         exit 1
      fi
   done

   if [ "$tor_circuit_established_check_exit_code" = "255" ]; then
      if [ "$VM" = "Gateway" ]; then
         echo "Tor Bootstrap Result: \
<b>Tor's Control Port could not be reached.</b><br>"
      elif [ "$VM" = "Workstation" ]; then
         if [ -f /usr/share/whonix/marker ]; then
            echo "Tor Bootstrap Result: \
<b>Tor's Control Port could not be reached.</b><br> \
<br>Did you start Gateway beforehand? \
<br>Please run whonixcheck on Gateway."
         else
            echo "Tor Bootstrap Result: \
<b>Tor's Control Port could not be reached.</b><br> \
<br>Did you start Gateway beforehand?"
         fi
      else
         if [ -f /usr/share/whonix/marker ]; then
            echo "Tor Bootstrap Result: \
<b>Tor's Control Port could not be reached.</b><br> \
<br>Did you start Gateway beforehand? \
<br>Please run whonixcheck on Gateway.
<br>$FUNCNAME: This is neither a gateway nor a workstation. Please report this bug!"
         else
            echo "Tor Bootstrap Result: \
<b>Tor's Control Port could not be reached.</b>"
         fi
      fi

      exit 1
   fi
}

tor_bootstrap_check() {
   if [ "$VM" = "Workstation" ]; then
      true "$FUNCNAME: INFO: skipping check_tor_bootstrap_status because workstation has no access to it."
   else
      check_tor_bootstrap_status
   fi

   ## TODO:
   ## When using an old Tor consensus which might be the case when no Tor
   ## circuit has been established yet, there is no point to check Tor
   ## consensus time as it might be outdated leading to concluding that the
   ## clock is fast.

   if [ "$tor_circuit_established" = "0" ]; then
      if [ "$VM" = "Workstation" ]; then
         echo "<b>Tor is not yet fully bootstrapped.</b> Tor circuit: $tor_circuit_established_word."
      else
         echo "<b>Tor is not yet fully bootstrapped.</b> $tor_bootstrap_percent % done.\
   <br>Tor reports: $tor_bootstrap_status"
      fi
   fi
}

tor_consensus_time_sanity_check() {
   ## If the static timestamp based time sanity check failed, there is no
   ## need to run the Tor consensus based time sanity check. Avoiding
   ## duplicate output.
   if [ "$timesanitycheck_static_timestamp_based_failed" = "true" ]; then
      return 0
   fi

   ## sets: tor_consensus_valid_after_exit_code
   ## sets: tor_consensus_valid_after_output
   ## sets: tor_consensus_valid_after_unixtime
   tor_consensus_valid-after

   ## sets: tor_consensus_valid_until_exit_code
   ## sets: tor_consensus_valid_until_output
   ## sets: tor_consensus_valid_until_unixtime
   tor_consensus_valid-until

   current_unixtime="$(date --utc +"%s")"

   if [ "$tor_consensus_valid_after_exit_code" = "0" ] && [ "$tor_consensus_valid_until_exit_code" = "0" ]; then
      clock_tor_consensus_check_result="ok"
      if [ "$current_unixtime" -ge "$tor_consensus_valid_after_unixtime" ]; then
         true
      else
         clock_tor_consensus_check_result="slow"
         clock_tor_consensus_check_msg="The clock might be too slow. Clock is slower than consensus/valid-after $tor_consensus_valid_after_output."
      fi
      if [ "$current_unixtime" -ge "$tor_consensus_valid_until_unixtime" ]; then
         clock_tor_consensus_check_result="fast"
         clock_tor_consensus_check_msg="The clock might be too fast. Clock is faster than consensus/valid-until $tor_consensus_valid_until_output."
      else
         true
      fi
   elif [ "$tor_consensus_valid_after_exit_code" = "277" ] && [ "$tor_consensus_valid_until_exit_code" = "277" ]; then
      clock_tor_consensus_check_result="noneyet"
      clock_tor_consensus_check_msg="Might not have downloaded a Tor consensus yet."
   else
      clock_tor_consensus_check_result="error"
      clock_tor_consensus_check_msg="Consensus time sanity check failed."
   fi

   if [ "$clock_tor_consensus_check_result" = "ok" ]; then
      clock_tor_consensus_check_result="ok"
      clock_tor_consensus_check_msg="Clock within consensus parameters consensus/valid-after $tor_consensus_valid_after_output and consensus/valid-until $tor_consensus_valid_until_output."
   fi

   if [ "$clock_tor_consensus_check_result" = "ok" ]; then
      echo "<p>Tor Consensus Time Sanity Check: $clock_tor_consensus_check_msg</p>"
   else
      echo "<p>Tor Consensus Time Sanity Check: $clock_tor_consensus_check_msg</p>"
   fi

   ## TODO
   ## Would have to parse tor_bootstrap_status.
   ## In case Tor cannot fetch Tor consensus $tor_consensus_valid_after_exit_code /
   ## $tor_consensus_valid_until_exit_code may be zero but $tor_consensus_valid_until_output
   ## may be empty.
   #if [ ! "$clock_tor_consensus_check_result" = "ok" ]; then
   #   if [ "$VM" = "Gateway" ]; then
   #      exit 1
   #   fi
   #fi
}

exit_success_if_tor_circuit_already_established() {
   if [ "$tor_circuit_established" = "1" ]; then
      echo "<p>Tor fully bootstrapped.</p>"
      exit 0
   fi
}

run_anondate_set() {
   echo "Running anondate-set..."
   ## This has a sudoers exception.
   anondate-set
}

te_pe_tb_check() {
   echo "$0: start"

   detect_vm_type

   timesanitycheck_static

   exit_if_tor_not_yet_enabled

   check_tor_circuit_established_yet

   tor_bootstrap_check

   tor_consensus_time_sanity_check

   exit_success_if_tor_circuit_already_established

   if [ "$timesanitycheck_static_timestamp_based_failed" = "true" ]; then
      run_anondate_set
   fi

   if [ ! "$clock_tor_consensus_check_result" = "ok" ]; then
      run_anondate_set
   fi

   ## Clock OK but not fully bootstrapped yet. Wait.
   exit 2
}

te_pe_tb_check "$@"
