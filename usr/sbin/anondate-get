#!/bin/bash

## Copyright (C) 2014 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Write all informational messages to stderr.
## Write date to stdout.

## exit codes:
## 0: show Tor consensus time middle range
## 1: error
## 2: show Tor certificate lifetime

## If tor@default is stopped.
# sudo anondate-tester
#
# cmd_item: anondate --has-consensus
# output:
# exit_code: 4
# ----------
# cmd_item: anondate --current-time-in-valid-range
# sed: can't read /var/lib/tor/cached-microdesc-consensus: No such file or directory
# output:
# exit_code: 1
# ----------
# cmd_item: anondate --show-valid-after
# sed: can't read /var/lib/tor/cached-microdesc-consensus: No such file or directory
# output:
# exit_code: 1
# ----------
# cmd_item: anondate --show-valid-until
# sed: can't read /var/lib/tor/cached-microdesc-consensus: No such file or directory
# output:
# exit_code: 1
# ----------
# cmd_item: anondate --show-middle-range
# sed: can't read /var/lib/tor/cached-microdesc-consensus: No such file or directory
# output:
# exit_code: 1
# ----------
# cmd_item: anondate --tor-cert-lifetime-invalid
# output:
# exit_code: 3
# ----------
# cmd_item: anondate --tor-cert-valid-after
# output:
# exit_code: 3
# ----------

#set -x
set -e

exit_handler() {
   echo "$0: INFO: Exiting with exit code $exit_code." >&2
   exit "$exit_code"
}

exit_code=1

trap exit_handler EXIT

if [ "$(whoami)" = "sdwdate" ]; then
   anondate_state_folder=/run/sdwdate
elif [ "$(id -u)" = "0" ]; then
   anondate_state_folder=/run/anondate
else
   echo "$0: ERROR: Must run as root." >&2
   exit_code=112
   exit 112
fi
anondate_tor_certificate_lifetime_set_file="${anondate_state_folder}/tor_certificate_lifetime_set"

source /usr/lib/helper-scripts/tor_bootstrap_check.bsh
check_tor_bootstrap_helper

if [ "$tor_bootstrap_percent" = "100" ]; then
   echo "$0: INFO: 100% Tor bootstrap, ok." >&2
   if tor_circuit_established_check="$(/usr/lib/helper-scripts/tor_circuit_established_check.py)" ; then
      echo "$0: INFO: tor_circuit_established_check.py, ok." >&2
      if [ "$tor_circuit_established_check" = "1" ]; then
         echo "$0: INFO: Tor circuit already established, ok." >&2
      else
         echo "$0: WARNING: Tor circuit not yet established." >&2
      fi
   else
      echo "$0: WARNING: tor_circuit_established_check.py failed." >&2
   fi
else
   echo "$0: WARNING: Tor bootstrap not done." >&2
fi

## TODO: Tor cert valid after must be after Tor consensus middle range to avoid using stale Tor consensus

## Needs acccess to TOR_DIR /var/lib/tor.
# if anondate --has-consensus ; then
# echo "$0: INFO: has Tor consensus, ok." >&2

if middle_range="$(anondate --show-middle-range)" ; then
   if [ "$middle_range" = "" ]; then
      echo "$0: WARNING: Tor consensus time middle range result empty." >&2
   elif anondate --current-time-in-valid-range ; then
      echo "$0: INFO: current time in valid in range, ok." >&2
   else
      echo "$0: WARNING: current time in NOT in valid range." >&2
      echo "$0: INFO: middle_range: '$middle_range'" >&2
      echo "$middle_range"
      exit_code="0"
      exit 0
   fi
else
   echo "$0: WARNING: could not determine Tor consensus time middle range." >&2
fi

# else
#    echo "$0: WARNING: has no Tor consensus yet." >&2
# fi

if anondate --tor-cert-lifetime-valid ; then
   echo "$0: INFO: Tor certificate lifetime valid, ok." >&2
else
   echo "$0: WARNING: Tor certificate lifetime invalid according to Tor log. This information might be outdated and not matter." >&2
   if time_result="$(anondate --tor-cert-valid-after)" ; then
      echo "$0: INFO: Tor certificate life date: $time_result" >&2
      time_result_unixtime="$(date --utc --date="$time_result" "+%s")"
      current_unixtime="$(date --utc "+%s")"
      if [ "$current_unixtime" -ge "$time_result_unixtime" ]; then
         echo "$0: INFO: Clock LATER than Tor certificate life date, ok." >&2
      else
         echo "$0: INFO: Clock EARLIER than Tor certificate life date." >&2
      fi
      echo "$time_result"
      exit_code=2
   else
      echo "$0: WARNING: Could not find out Tor certificate life date." >&2
   fi
fi
